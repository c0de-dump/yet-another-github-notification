{
    "compilerOptions": {
        "allowSyntheticDefaultImports": true,
        "noImplicitAny": true,
        "module": "ES6",
        "target": "ES6",
        "allowJs": true,
        "lib": [
            "DOM",
            "WebWorker",
            "ES6",
            "DOM.Iterable"
        ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
        "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "rootDir": "src" /* Specify the root folder within your source files. */,
        "checkJs": true /* Enable error reporting in type-checked JavaScript files. */,
        "outDir": "dist" /* Specify an output folder for all emitted files. */,
        "removeComments": true /* Disable emitting comments. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        "strict": true /* Enable all strict type-checking options. */,
        "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
        "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
        "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
        "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
        "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
        "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
        "skipLibCheck": true /* Skip type checking all .d.ts files. */,
        "noEmit": true /* Disable emitting files from a compilation. */,
        "paths": {
            "@schema": ["./src/types/index.ts"]
        }
    },
    "include": ["src/**/*"],
    "exclude": ["node_modules"]
}
